{
  "name": "npm-nginx-authelia-config-sample",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -20,
        580
      ]
    },
    {
      "parameters": {
        "filePath": "={{$json[\"proxy_host_x\"]}}"
      },
      "name": "read-host-x-conf",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        140,
        780
      ]
    },
    {
      "parameters": {
        "setAllData": false,
        "options": {}
      },
      "name": "get-host-x",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        300,
        780
      ]
    },
    {
      "parameters": {
        "functionCode": "var get_data = $node[\"SplitInBatches\"].json;\nconst fileData = items.map(item => `${item.json.data.replace(\"authelia-api-verify\", get_data.authelia).replace(/_change/g, get_data.name).replace(\"ip_+\", get_data.ip).replace(\"{auth}\", get_data.auth_uri).replace(\"real-ip-from\", get_data.real_ip)}`)\n\nreturn [\n  {\n    json: {\n      name: get_data.name,\n      id: get_data.id,\n      advanced_config: fileData.join(\"\\n\"),\n    }\n  }\n]"
      },
      "name": "Convert Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        460,
        780
      ]
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        -20,
        780
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$node[\"get-config-data\"].json[\"npm_uri\"]}}{{$node[\"get-config-data\"].json[\"npm_api_routes\"][\"base\"]}}{{$node[\"get-config-data\"].json[\"npm_api_routes\"][\"tokens\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "identity",
              "value": "={{$json[\"npm_auth\"][\"email\"]}}"
            },
            {
              "name": "secret",
              "value": "={{$json[\"npm_auth\"][\"pass\"]}}"
            }
          ]
        }
      },
      "name": "post-npm-token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        280,
        580
      ]
    },
    {
      "parameters": {
        "url": "={{$node[\"get-config-data\"].json[\"npm_uri\"]}}{{$node[\"get-config-data\"].json[\"npm_api_routes\"][\"base\"]}}{{$node[\"get-config-data\"].json[\"npm_api_routes\"][\"proxy-hosts\"]}}",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "authorization",
              "value": "=Bearer {{$json[\"token\"]}}"
            }
          ]
        }
      },
      "name": "get-proxy-hosts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        440,
        580
      ]
    },
    {
      "parameters": {
        "functionCode": "var list=[];\nvar config_data = $node[\"get-config-data\"].json;\nvar dataList = items[0].json;\nvar filterList = config_data.proxy_hosts;\n\nvar authelia = config_data.authelia;\nvar real_ip = config_data.real_ip_from;\nvar auth_uri = config_data.auth_uri;\n\nfunction arrayMatch(arr1, arr2) {\n  var arr = [];  // Array to contain match elements\n  for(var i=0 ; i<arr1.length ; ++i) {\n    for(var j=0 ; j<arr2.length ; ++j) {\n      if(arr1[i] == arr2[j]) {    // If element is in both the arrays\n        arr.push(arr1[i]);        // Push to arr array\n      }\n    }\n  }\n   \n  return arr;  // Return the arr elements\n}\n\nfor (var i = 0; i < dataList.length; i++) {\n  var data = dataList[i];\n  var id = data.id;\n  var domain_names = data.domain_names;\n  var http = data.forward_scheme;\n  var host = data.forward_host;\n  var port = data.forward_port;\n  var name = arrayMatch(domain_names, filterList);\n  if(name.length !== 0)\n  list.push(\n    {\n      id: id,\n      authelia: authelia,\n      name: name[0].split(\".\")[0],\n      domain: `https://${data.domain_names[0]}`,\n      auth_uri: auth_uri,\n      ip: `${http}://${host}:${port}`,\n      real_ip: real_ip,\n      proxy_host_x: config_data.proxy_host_x\n    }\n  )\n  else\n  console.log(`data: host: ${http}://${host}:${port}`);\n}\nreturn list;"
      },
      "name": "get-data-list",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        600,
        580
      ]
    },
    {
      "parameters": {
        "requestMethod": "PUT",
        "url": "={{$node[\"get-config-data\"].json[\"npm_uri\"]}}{{$node[\"get-config-data\"].json[\"npm_api_routes\"][\"base\"]}}{{$node[\"get-config-data\"].json[\"npm_api_routes\"][\"proxy-hosts\"]}}/{{$json[\"id\"]}}",
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "advanced_config",
              "value": "={{$json[\"advanced_config\"]}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "authorization",
              "value": "=Bearer {{$node[\"post-npm-token\"].json[\"token\"]}}"
            }
          ]
        }
      },
      "name": "update-proxy-hosts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        620,
        780
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": true,
              "value2": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}"
            },
            {
              "value1": "={{$node[\"get-config-data\"].json[\"discord_web_hook\"].includes(\"https://\")}}",
              "value2": true
            }
          ]
        }
      },
      "name": "check-if-batch-is-done",
      "type": "n8n-nodes-base.if",
      "position": [
        -20,
        980
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "webhookUri": "={{$node[\"get-config-data\"].json[\"discord_web_hook\"]}}",
        "text": "NPM proxy hosts has been updated!",
        "options": {
          "embeds": "=[\n    {\n      \"type\": \"rich\",\n      \"title\": \"Nginx Proxy Manager Proxy-Hosts\",\n      \"description\": {{$json[\"list\"]}},\n      \"fields\": {{$json[\"fields\"]}}\n    }\n  ]"
        }
      },
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 1,
      "position": [
        460,
        980
      ]
    },
    {
      "parameters": {
        "functionCode": "const allData = []\n\nfunction data(mod){\n  return {\"name\": `last modified on`, \"value\": `${mod}`};\n}\n\nlet counter = 0;\ndo {\n  try {\n    const items = $items(\"update-proxy-hosts\", 0, counter).map(item => `${item.json.forward_scheme}://${item.json.domain_names[0]}`);\n    allData.push.apply(allData, items);\n  } catch (error) {\n    return {list: JSON.stringify(allData.join(\"\\n\\n\")), fields: JSON.stringify([data(new Date().toISOString())])};  \n  }\n\n  counter++;\n} while(true);"
      },
      "name": "merge-data",
      "type": "n8n-nodes-base.function",
      "position": [
        140,
        980
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$node[\"get-config-data\"].json[\"discord_web_hook\"].includes(\"https://\")}}",
              "value2": true
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        300,
        980
      ]
    },
    {
      "parameters": {
        "functionCode": "\nreturn [\n   {\n      \"authelia\":\"http://IP:PORT\",\n      \"real_ip_from\":\"0.0.0.0/16\",\n      \"auth_uri\":\"auth.mydomain.com\",\n      \"npm_uri\":\"http://IP:PORT\",\n      \"npm_auth\":{\n         \"email\":\"email@example.com\",\n         \"pass\":\"changme\"\n      },\n      \"proxy_host_x\":\"/media/auth/proxy_host_x.conf\",\n      \"discord_web_hook\":\"\",\n      \"root_domain\": \"mydomain.com\",\n      \"proxy_hosts\":[\n         \"adguard.mydomain.com\",\n         \"plex.mydomain.com\"\n      ],\n      \"npm_api_routes\":{\n         \"base\":\"/api\",\n         \"tokens\": \"/tokens\",\n         \"users\": \"/users\",\n         \"proxy-hosts\": \"/nginx/proxy-hosts\",\n         \"redirection-hosts\": \"/nginx/redirection-hosts\",\n         \"dead-hosts\": \"/nginx/dead-hosts\",\n         \"certificates\": \"/nginx/certificates\",\n         \"access-list\": \"/nginx/access-lists\",\n         \"settings\": \"/settings\"\n      }\n   }\n]"
      },
      "name": "get-config-data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        120,
        580
      ]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "get-config-data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "read-host-x-conf": {
      "main": [
        [
          {
            "node": "get-host-x",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-host-x": {
      "main": [
        [
          {
            "node": "Convert Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert Data": {
      "main": [
        [
          {
            "node": "update-proxy-hosts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "read-host-x-conf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "post-npm-token": {
      "main": [
        [
          {
            "node": "get-proxy-hosts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-proxy-hosts": {
      "main": [
        [
          {
            "node": "get-data-list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-data-list": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update-proxy-hosts": {
      "main": [
        [
          {
            "node": "check-if-batch-is-done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-if-batch-is-done": {
      "main": [
        [
          {
            "node": "merge-data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge-data": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-config-data": {
      "main": [
        [
          {
            "node": "post-npm-token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "id": 58,
  "tags": [
    {
      "id": "1",
      "name": "sample",
      "createdAt": "2022-06-17T15:23:02.130Z",
      "updatedAt": "2022-06-17T15:23:02.130Z"
    }
  ]
}
